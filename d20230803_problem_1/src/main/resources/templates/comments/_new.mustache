<div id="comments-list" class="m-1">
  <div id="comments-new" class="card m-2">
    <div class="card-header bg-dark text-white">
      댓글 쓰기
    </div>
    <div class="card-body">
      <!-- 댓글 작성 폼 -->
      <form>
        <!-- 닉네임 입력 -->
        <div class="mb-3">
          <label for="new-comment-nickname" class="form-label">닉네임</label>
          <input id="new-comment-nickname" class="form-control form-control-sm" />
        </div>
        <!-- 댓글 입력 -->
        <div class="mb-3">
          <label for="new-comment-body" class="form-label">댓글</label>
          <textarea id="new-comment-body" class="form-control form-control-sm" rows="5"
            style="resize: none;"></textarea>
        </div>
        <!-- 작성하는 댓글이 어떤 메인글의 댓글인가 저장하기 위해 메인글의 id를 히든으로 전달한다. -->
        {{#article}}
        <input id="new-comment-article-id" type="hidden" value="{{id}}" />
        {{/article}}
        <!-- 전송 버튼 -->
        <button id="comment-create-btn" class="btn btn-outline-primary btn-sm" type="button">
          댓글 저장
        </button>
      </form>
    </div>
  </div>
</div>

<script>
  void function () {
    // 전송 버튼을 선택해서 click 이벤트를 걸어준다
    const commentCreateBtn = document.querySelector('#comment-create-btn')

    // addEventListener('이벤트', 실행할_함수)
    commentCreateBtn && commentCreateBtn.addEventListener('click', function (e) {
      // 유효성 검사

      // 새 댓글 객체를 생성한다
      const comment = {
        nickname: document.querySelector('#new-comment-nickname').value || '',
        body: document.querySelector('#new-comment-body').value || '',
        article_id: document.querySelector('#new-comment-article_id').value || '',
      }

      // 댓글 객체 출력
      console.log(comment);

      // ajax를 이용해서 Rest API를 호출한다
      // fetch Ajax
      // @PostMapping("url")
      /*
      url, method: 'POST', body: JSON.stringify()
      Content-Type: 'application/json'
      */
      const url = `/api/comments/${comment.article_id}/comments`
      fetch(url, {
        method: 'POST',
        body: JSON.stringify(comment),
        headers: {
          'Content-Type': 'application/json'
        },
      })
        .then(res => {
          const msg = res.ok ? '댓글이 등록되었습니다' : '댓글 등록 실패'
          alert(msg)
          location.reload()
        })

      // 현재 페이지를 새로고침한다
      location.reload()
    })
  }()
</script>